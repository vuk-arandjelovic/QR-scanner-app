/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HTTPValidationError from '../model/HTTPValidationError';

/**
* Firma service.
* @module api/FirmaApi
* @version 0.1.0
*/
export default class FirmaApi {

    /**
    * Constructs a new FirmaApi. 
    * @alias module:api/FirmaApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getFirmaByNazivFirmaAllGet operation.
     * @callback module:api/FirmaApi~getFirmaByNazivFirmaAllGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Firma By Naziv
     * @param {module:api/FirmaApi~getFirmaByNazivFirmaAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getFirmaByNazivFirmaAllGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/firma/all', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFirmaByNazivFirmaNazivNazivGet operation.
     * @callback module:api/FirmaApi~getFirmaByNazivFirmaNazivNazivGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Firma By Naziv
     * @param {String} naziv 
     * @param {module:api/FirmaApi~getFirmaByNazivFirmaNazivNazivGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getFirmaByNazivFirmaNazivNazivGet(naziv, callback) {
      let postBody = null;
      // verify the required parameter 'naziv' is set
      if (naziv === undefined || naziv === null) {
        throw new Error("Missing the required parameter 'naziv' when calling getFirmaByNazivFirmaNazivNazivGet");
      }

      let pathParams = {
        'naziv': naziv
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/firma/naziv/{naziv}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFirmaByPibFirmaPibPibGet operation.
     * @callback module:api/FirmaApi~getFirmaByPibFirmaPibPibGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Firma By Pib
     * @param {Number} pib 
     * @param {module:api/FirmaApi~getFirmaByPibFirmaPibPibGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getFirmaByPibFirmaPibPibGet(pib, callback) {
      let postBody = null;
      // verify the required parameter 'pib' is set
      if (pib === undefined || pib === null) {
        throw new Error("Missing the required parameter 'pib' when calling getFirmaByPibFirmaPibPibGet");
      }

      let pathParams = {
        'pib': pib
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/firma/pib/{pib}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
